{
	"info": {
		"_postman_id": "3690a829-49df-4e12-8346-20041fc5b6c8",
		"name": "FluencyHub API",
		"description": "Collection para testar todos os endpoints da API FluencyHub",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3219041"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"if (jsonData.token) {",
									"    pm.collectionVariables.set(\"token\", jsonData.token);",
									"    pm.test(\"Admin token saved in variable\", function() {",
									"        pm.expect(pm.collectionVariables.get(\"token\")).to.not.be.empty;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.clear();\r",
									"pm.collectionVariables.set(\"baseUrl\", \"https://localhost:7152\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@fluencyhub.com\",\n    \"password\": \"Test@123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login de um administrador."
					},
					"response": []
				},
				{
					"name": "Login Student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"if (jsonData.token) {",
									"    pm.collectionVariables.set(\"token\", jsonData.token);",
									"    pm.test(\"Student token saved in variable\", function() {",
									"        pm.expect(pm.collectionVariables.get(\"token\")).to.not.be.empty;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"jack.student1@fluencyhub.com\",\n    \"password\": \"Test@123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login de um estudante existente."
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados à autenticação e registro de usuários."
		},
		{
			"name": "Students",
			"item": [
				{
					"name": "Get Current Student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"if (jsonData.id) {\r",
									"    pm.collectionVariables.set(\"studentId\", jsonData.id);\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/students/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"students",
								"me"
							]
						},
						"description": "Obtém informações do estudante atualmente logado."
					},
					"response": []
				},
				{
					"name": "Get All Students",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/students",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"students"
							]
						},
						"description": "Obtém informações do estudante atualmente logado."
					},
					"response": []
				},
				{
					"name": "Get Student by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"if (jsonData.id) {",
									"    pm.collectionVariables.set(\"studentId\", jsonData.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/students/{{studentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"students",
								"{{studentId}}"
							]
						},
						"description": "Obtém um estudante pelo ID."
					},
					"response": []
				},
				{
					"name": "Create Student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Jack\",\n    \"lastName\": \"Student 1\",\n    \"email\": \"jack.student1@fluencyhub.com\",\n    \"phoneNumber\": \"11912345678\",\n    \"dateOfBirth\": \"1995-01-01T00:00:00Z\",\n    \"password\": \"Test@123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/students",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"students"
							]
						},
						"description": "Cria um novo estudante e usuário correspondente com senha padrão 'FluencyHub@123'."
					},
					"response": []
				},
				{
					"name": "Update Student",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{studentId}}\",\n    \"firstName\": \"Jack\",\n    \"lastName\": \"Amaral\",\n    \"phoneNumber\": \"11987654321\",\n    \"dateOfBirth\": \"2016-05-01T00:00:00Z\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/students/{{studentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"students",
								"{{studentId}}"
							]
						},
						"description": "Atualiza um estudante existente."
					},
					"response": []
				},
				{
					"name": "Deactivate Student",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/students/{{studentId}}/deactivate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"students",
								"{{studentId}}",
								"deactivate"
							]
						},
						"description": "Desativa um estudante (apenas administradores)."
					},
					"response": []
				},
				{
					"name": "Activate Student",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/students/{{studentId}}/activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"students",
								"{{studentId}}",
								"activate"
							]
						},
						"description": "Ativa um estudante (apenas administradores)."
					},
					"response": []
				},
				{
					"name": "Get Student Progress",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/students/{{studentId}}/progress",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"students",
								"{{studentId}}",
								"progress"
							]
						},
						"description": "Obtém o progresso de um estudante em seus cursos."
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados ao gerenciamento de estudantes."
		},
		{
			"name": "Courses",
			"item": [
				{
					"name": "Get All Courses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"if (jsonData && jsonData.length > 0) {",
									"    pm.collectionVariables.set(\"courseId\", jsonData[0].id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/courses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"courses"
							]
						},
						"description": "Lista todos os cursos disponíveis."
					},
					"response": []
				},
				{
					"name": "Get Course by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/courses/{{courseId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}"
							]
						},
						"description": "Obtém detalhes de um curso específico pelo ID."
					},
					"response": []
				},
				{
					"name": "Create Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"if (jsonData && jsonData.id) {\r",
									"    pm.collectionVariables.set(\"courseId\", jsonData.id);\r",
									"    console.log(\"ID armazenado:\", jsonData.id); // Confirmação opcional\r",
									"} else {\r",
									"    console.error(\"Resposta não contém um ID válido\");\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Curso de Inglês Avançado III\",\n    \"description\": \"Curso perfeito para iniciantes que desejam aprender inglês de forma eficiente.\",\n    \"price\": 499.90,\n    \"syllabus\":\"Este curso abrange vocabulário básico, gramática fundamental e exercícios práticos.\",\n    \"learningObjectives\": \"Ao final do curso, o aluno será capaz de se comunicar em situações cotidianas em inglês.\",\n    \"preRequisites\": \"Não há pré-requisitos para este curso.\",\n    \"targetAudience\":\"Todos\",\n    \"language\":\"Inglês\",\n    \"level\":\"Iniciante\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/courses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"courses"
							]
						},
						"description": "Cria um novo curso (apenas administradores)."
					},
					"response": []
				},
				{
					"name": "Update Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"if (jsonData && jsonData.id) {\r",
									"    pm.collectionVariables.set(\"courseId\", jsonData.id);\r",
									"    console.log(\"ID armazenado:\", jsonData.id); // Confirmação opcional\r",
									"} else {\r",
									"    console.error(\"Resposta não contém um ID válido\");\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{courseId}}\",\n    \"name\": \"Curso de Inglês Basico I.\",\n    \"description\": \"Curso perfeito para iniciantes que desejam aprender inglês de forma eficiente.\",\n    \"price\": 149.90,\n    \"syllabus\":\"Este curso abrange vocabulário básico, gramática fundamental e exercícios práticos.\",\n    \"learningObjectives\": \"Ao final do curso, o aluno será capaz de se comunicar em situações cotidianas em inglês.\",\n    \"preRequisites\": \"Não há pré-requisitos para este curso.\",\n    \"targetAudience\":\"Todos\",\n    \"language\":\"Inglês\",\n    \"level\":\"Iniciante\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/courses/{{courseId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}"
							]
						},
						"description": "Cria um novo curso (apenas administradores)."
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados ao gerenciamento de cursos."
		},
		{
			"name": "Lessons",
			"item": [
				{
					"name": "Get Lessons by Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"if (jsonData && jsonData.length > 0) {",
									"    pm.collectionVariables.set(\"lessonId\", jsonData[0].id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/courses/{{courseId}}/lessons",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"lessons"
							]
						},
						"description": "Lista todas as aulas de um curso específico."
					},
					"response": []
				},
				{
					"name": "Add Lesson",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"if (jsonData && jsonData.id) {\r",
									"    pm.collectionVariables.set(\"lessonId\", jsonData.id);\r",
									"    console.log(\"ID armazenado:\", jsonData.id); // Confirmação opcional\r",
									"} else {\r",
									"    console.error(\"Resposta não contém um ID válido\");\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Introdução ao Vocabulário Básico I\",\n    \"content\": \"Nesta aula, aprenderemos o vocabulário básico necessário para apresentações e conversas simples em inglês.\",\n    \"materialUrl\": \"https://example.com/materials/basic-vocabulary.pdf\",\n    \"order\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/courses/{{courseId}}/lessons",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"lessons"
							]
						},
						"description": "Adiciona uma nova aula a um curso (apenas administradores)."
					},
					"response": []
				},
				{
					"name": "Update Lesson",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"courseId\": \"{{courseId}}\",\n    \"lessonId\": \"{{lessonId}}\",\n    \"title\": \"Introdução ao Vocabulário Básico - Atualizado\",\n    \"content\": \"Conteúdo atualizado da aula com exemplos e exercícios práticos.\",\n    \"materialUrl\": \"https://example.com/materials/updated-basic-vocabulary.pdf\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/courses/{{courseId}}/lessons/{{lessonId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"lessons",
								"{{lessonId}}"
							]
						},
						"description": "Atualiza uma aula existente (apenas administradores)."
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados ao gerenciamento de aulas."
		},
		{
			"name": "Enrollments",
			"item": [
				{
					"name": "Enroll Student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"if (jsonData.id) {",
									"    pm.collectionVariables.set(\"enrollmentId\", jsonData.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"courseId\": \"{{courseId}}\",\n    \"studentId\": \"{{studentId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/enrollments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"enrollments"
							]
						},
						"description": "Matricula um estudante em um curso."
					},
					"response": []
				},
				{
					"name": "Get Enrollment by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/enrollments/{{enrollmentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"enrollments",
								"{{enrollmentId}}"
							]
						},
						"description": "Obtém detalhes de uma matrícula específica."
					},
					"response": []
				},
				{
					"name": "Get Student Enrollments",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/enrollments/student/{{studentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"enrollments",
								"student",
								"{{studentId}}"
							]
						},
						"description": "Lista todas as matrículas de um estudante."
					},
					"response": []
				},
				{
					"name": "Complete Lesson",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"completed\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/enrollments/{{enrollmentId}}/lessons/{{lessonId}}/complete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"enrollments",
								"{{enrollmentId}}",
								"lessons",
								"{{lessonId}}",
								"complete"
							]
						},
						"description": "Marca uma aula como concluída para um estudante."
					},
					"response": []
				},
				{
					"name": "Complete Course",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/enrollments/{{enrollmentId}}/complete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"enrollments",
								"{{enrollmentId}}",
								"complete"
							]
						},
						"description": "Marca um curso como concluído para um estudante."
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados ao gerenciamento de matrículas."
		},
		{
			"name": "Payments",
			"item": [
				{
					"name": "Process Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"if (jsonData.id) {",
									"    pm.collectionVariables.set(\"paymentId\", jsonData.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enrollmentId\": \"{{enrollmentId}}\",\n    \"amount\": 149.90,\n    \"cardDetails\": {\n        \"cardholderName\": \"Test User\",\n        \"cardNumber\": \"4111111111111111\",\n        \"expiryMonth\": 12,\n        \"expiryYear\": 2028,\n        \"cvv\": \"123\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/payments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments"
							]
						},
						"description": "Processa um pagamento para uma matrícula."
					},
					"response": []
				},
				{
					"name": "Get Payment by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/payments/{{paymentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments",
								"{{paymentId}}"
							]
						},
						"description": "Obtém detalhes de um pagamento específico."
					},
					"response": []
				},
				{
					"name": "Refund Payment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reason\": \"Solicitação do cliente\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/payments/{{paymentId}}/refund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments",
								"{{paymentId}}",
								"refund"
							]
						},
						"description": "Solicita reembolso de um pagamento (apenas administradores)."
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados ao processamento de pagamentos."
		},
		{
			"name": "Certificates",
			"item": [
				{
					"name": "Generate Certificate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"if (jsonData.id) {",
									"    pm.collectionVariables.set(\"certificateId\", jsonData.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"studentId\": \"{{studentId}}\",\n    \"courseId\": \"{{courseId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/certificates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"certificates"
							]
						},
						"description": "Gera um certificado para um estudante que concluiu um curso."
					},
					"response": []
				},
				{
					"name": "Get Certificate by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/certificates/{{certificateId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"certificates",
								"{{certificateId}}"
							]
						},
						"description": "Obtém detalhes de um certificado específico."
					},
					"response": []
				},
				{
					"name": "Get Student Certificates",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/certificates/student/{{studentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"certificates",
								"student",
								"{{studentId}}"
							]
						},
						"description": "Lista todos os certificados de um estudante."
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados ao gerenciamento de certificados."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "courseId",
			"value": ""
		},
		{
			"key": "lessonId",
			"value": ""
		},
		{
			"key": "studentId",
			"value": ""
		},
		{
			"key": "enrollmentId",
			"value": ""
		},
		{
			"key": "paymentId",
			"value": ""
		}
	]
}